# Generated by Django 5.2.4 on 2025-09-27 14:47

import cloudinary_storage.storage
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(blank=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='districts/')),
                ('status', models.CharField(choices=[('not_started', 'Не начата'), ('in_progress', 'В процессе'), ('waiting', 'Ожидает'), ('completed', 'Завершена')], default='not_started', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('difficulty', models.CharField(choices=[('easy', 'Легкая'), ('medium', 'Средняя'), ('hard', 'Сложная'), ('epic', 'Эпическая')], default='medium', max_length=10)),
                ('short_desc', models.CharField(max_length=350)),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('not_started', 'Не начата'), ('in_progress', 'В процессе'), ('waiting', 'Ожидает'), ('completed', 'Завершена')], default='not_started', max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Легкая'), ('medium', 'Средняя'), ('hard', 'Сложная'), ('epic', 'Эпическая')], default='medium', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('total_time', models.IntegerField(default=600)),
                ('coins', models.IntegerField(default=50)),
                ('gems', models.IntegerField(default=5)),
                ('max_humans', models.IntegerField(default=5)),
                ('image', models.ImageField(blank=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='levels/')),
                ('dostup', models.CharField(choices=[('not_started', 'Не начата'), ('in_progress', 'В процессе'), ('waiting', 'Ожидает'), ('completed', 'Завершена')], default='not_started', max_length=150)),
                ('icon', models.CharField(max_length=50)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='quests.district')),
            ],
            options={
                'verbose_name': 'Уровень',
                'verbose_name_plural': 'Уровни',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('correct_code', models.CharField(max_length=50)),
                ('order', models.IntegerField()),
                ('time_limit', models.IntegerField(default=120)),
                ('image', models.ImageField(blank=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='levels/tasks/')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='quests.level')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
    ]
